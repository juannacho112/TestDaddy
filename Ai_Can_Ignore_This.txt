Next Steps Propts:  when youre done, combine the two .txt files for Project Overview and Setup and combine those plus add whatever to the README.md 
so it explains the whole project in a summary and has detailedi nstallation instructions 
for all steps from cloning the repo to getting the project to work.  I also Included a file call

I want to setup a dynamic front end for when users click "Pay with Daddy" or Pay with solana" as in my @./Sample_Frontend_Snippet.txt that 
i have on my website currently with aform for name and email. I would like to change this so my buton redirects them to my frontend website
website we build here so they can fill out a form with their shipping info and select shipping speed ect and have it look like a nice checkoout page with  modern UI and they can choose Pay with DAddy or Sol
and it uses all the same backend logic to generate an invoice for them that will be checked by the worker.ts and all that. The only difference is we will host  the front end that will send in the cart value as well
so there will be two different ways we can send data to ur backend but the output will be the same. For our front end, users should be able to fill in name, email, optional phonen number, and shipping address as Address Line 1, Address line 2, Country, City, State/Region, Zip Code and 
choose to select Standard shipping for $10 or Priority for $50 and that will be added to the total before generating a solana or Daddy-Tate Daddy invoice. CartTotal will be passed to the URL in whatever way you think is best as users will be getting redirected from another checkout pgae that has the cart total. 
this is the same cart total we were working with before as seen in the Sample Frontend Snipped and how you are currently receving the Cart Total or Total value to convert to Sol or Daddy. Please try to not edit any existing files and just create all new files if possible.
If possible, also allow my other website to be ableto pass through the same data for shipping and name email phone number as we will have our front end do. Currently its only able to recevie first name last name and email and we use email as the idnetifier. Please add in the abitility for my web snipped to 
be able to send through the same data we build our frontend to accept and have both of them store that data in MongoDB and then send in through the zapier webhook in the same way. Essentially we are building out a frontend for users to input all their info to hava different way in addition to our current way of 
sending data to the api and then we are expanding the data our current api can receive and process in our MongoDB database. Please break all these taks down and complete them as an expert developer with all your knowledge of my project.
When you are finished create a file called GithubUpdate2.txt and fill it with everything we have changed as ill use this as a new commit to github and want to explain the changes


Can we add a page before the checkout page that will be the main home pain instead of the default Next JS home screen. The home screen should have like an ecom store with different products. For now well have two products for now and basic menu ber at the top using the icon url from @/Image_Urls.txt that also has the urls for the product images. It shoud maintain the same design of black background with white text or matrix green accents. There can be a photo of each product with a price below and a name. For now you can name them Fawkes Phone 8a and Fakwes Phone 8 and make them $649 and $699 respectively. There should bea button below that says buy now that sends them to the checkout page and passes the value as cartTotal. They should also have an add to cart button below the buy now button in case they want to add multiple different products to their cart. You can add a little cart icon in the top righ that updates with how many items are in their cart and gives them a button after clicking on the cart to see items in their cart, edit them or continue to checkout page. It should work like a normal checkout page. In the top Left of the menu bar on main screen you can have a "Return to Main Website" button that just redirects to google.com right now but well edit that. Make everything in new files if possible and dont break any of the old stuff. Make sure the new cart features and such work seemlessly